{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class GameService {\n  constructor() {}\n  /**\r\n   * Math Random para generar un random y multiplicamos por 3\r\n   * Redondeamos el entero superior, quedando 0,1,2 como posibles resultados\r\n   * y con ello selecciona Piedra (r), Papel (p) ó Tijera (s)\r\n   */\n  getComputerChoice() {\n    const choices = ['r', 'p', 's']; // Piedra, Papel, Tijeras\n    const randomChoice = Math.floor(Math.random() * 3);\n    return choices[randomChoice];\n  }\n  game(userChoice, miHerramienta, suHerramienta) {\n    const playUserComp = userChoice + this.getComputerChoice();\n    console.log(`Jugada realizada: ${playUserComp}`);\n    let playStatus;\n    console.log(playUserComp);\n    switch (playUserComp.substring(0, 1)) {\n      case 'r':\n        miHerramienta = 'piedra';\n        break;\n      case 'p':\n        miHerramienta = 'papel';\n        break;\n      case 's':\n        miHerramienta = 'tijeras';\n        break;\n    }\n    switch (playUserComp.substring(playUserComp.length, 1)) {\n      case 'r':\n        suHerramienta = 'piedra';\n        break;\n      case 'p':\n        suHerramienta = 'papel';\n        break;\n      case 's':\n        suHerramienta = 'tijeras';\n        break;\n    }\n    switch (playUserComp) {\n      // Ganamos\n      case 'rs':\n      case 'sp':\n      case 'pr':\n        return playStatus = {\n          message: `Ganas a la computadora con ${miHerramienta} que utilizó ${suHerramienta}`,\n          userAdd: 1,\n          compAdd: 0\n        };\n      // Gana la computadora\n      case 'rp':\n      case 'ps':\n      case 'sr':\n        return playStatus = {\n          message: `Gana la computadora con ${suHerramienta} contra tu ${miHerramienta}`,\n          userAdd: 0,\n          compAdd: 1\n        };\n      // Empatamos\n      case 'rr':\n      case 'pp':\n      case 'ss':\n        return playStatus = {\n          message: `Habéis elegido la misma herramienta ${miHerramienta} y habéis empatado`,\n          userAdd: 1,\n          compAdd: 1\n        };\n    }\n  }\n}\nGameService.ɵfac = function GameService_Factory(t) {\n  return new (t || GameService)();\n};\nGameService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GameService,\n  factory: GameService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EACtBC,eAAe;EAEf;;;;;EAKQC,iBAAiB;IACvB,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACjC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;IAClD,OAAOJ,OAAO,CAACC,YAAY,CAAC;EAC9B;EAEAI,IAAI,CACFC,UAAkB,EAClBC,aAAqB,EACrBC,aAAqB;IAGrB,MAAMC,YAAY,GAAGH,UAAU,GAAG,IAAI,CAACP,iBAAiB,EAAE;IAC1DW,OAAO,CAACC,GAAG,CAAC,qBAAqBF,YAAY,EAAE,CAAC;IAGhD,IAAIG,UAIH;IAEDF,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IACzB,QAAOA,YAAY,CAACI,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC;MAChC,KAAK,GAAG;QAAEN,aAAa,GAAG,QAAQ;QAAE;MACpC,KAAK,GAAG;QAAEA,aAAa,GAAG,OAAO;QAAE;MACnC,KAAK,GAAG;QAAEA,aAAa,GAAG,SAAS;QAAE;IAAM;IAG7C,QAAOE,YAAY,CAACI,SAAS,CAACJ,YAAY,CAACK,MAAM,EAAC,CAAC,CAAC;MAClD,KAAK,GAAG;QAAEN,aAAa,GAAG,QAAQ;QAAE;MACpC,KAAK,GAAG;QAAEA,aAAa,GAAG,OAAO;QAAE;MACnC,KAAK,GAAG;QAAEA,aAAa,GAAG,SAAS;QAAE;IAAM;IAE7C,QAAQC,YAAY;MAElB;MACA,KAAK,IAAI;MACT,KAAK,IAAI;MACT,KAAK,IAAI;QACT,OAAOG,UAAU,GAAG;UAChBG,OAAO,EAAE,8BAA8BR,aAAa,gBAAgBC,aAAa,EAAE;UACnFQ,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE;SACV;MACH;MACA,KAAK,IAAI;MACT,KAAK,IAAI;MACT,KAAK,IAAI;QACT,OAAOL,UAAU,GAAG;UAChBG,OAAO,EAAE,2BAA2BP,aAAa,cAAcD,aAAa,EAAE;UAC9ES,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE;SACV;MACH;MACA,KAAK,IAAI;MACT,KAAK,IAAI;MACT,KAAK,IAAI;QACT,OAAOL,UAAU,GAAG;UAChBG,OAAO,EAAE,uCAAuCR,aAAa,oBAAoB;UACjFS,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE;SACV;IAAC;EAER;;;mBAxEWpB,WAAW;AAAA;;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAHV;AAAM","names":["GameService","constructor","getComputerChoice","choices","randomChoice","Math","floor","random","game","userChoice","miHerramienta","suHerramienta","playUserComp","console","log","playStatus","substring","length","message","userAdd","compAdd","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\BBVA\\angular-pwa\\src\\app\\services\\game.service.ts.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class GameService {\n  constructor() {}\n\n  /**\n   * Math Random para generar un random y multiplicamos por 3\n   * Redondeamos el entero superior, quedando 0,1,2 como posibles resultados\n   * y con ello selecciona Piedra (r), Papel (p) ó Tijera (s)\n   */\n  private getComputerChoice(): string {\n    const choices = ['r', 'p', 's']; // Piedra, Papel, Tijeras\n    const randomChoice = Math.floor(Math.random() * 3);\n    return choices[randomChoice];\n  }\n  \n  game(\n    userChoice: string,\n    miHerramienta: string,\n    suHerramienta: string\n  ){\n    \n    const playUserComp = userChoice + this.getComputerChoice();\n    console.log(`Jugada realizada: ${playUserComp}`);\n\n  \n    let playStatus: {\n      message: string;\n      userAdd: number;\n      compAdd: number;\n    };\n\n    console.log(playUserComp);\n    switch(playUserComp.substring(0,1)){\n      case 'r': miHerramienta = 'piedra'; break;\n      case 'p': miHerramienta = 'papel'; break;\n      case 's': miHerramienta = 'tijeras'; break;\n    }\n\n    switch(playUserComp.substring(playUserComp.length,1)){\n      case 'r': suHerramienta = 'piedra'; break;\n      case 'p': suHerramienta = 'papel'; break;\n      case 's': suHerramienta = 'tijeras'; break;\n    }\n    switch (playUserComp) {\n      \n      // Ganamos\n      case 'rs':\n      case 'sp':\n      case 'pr':\n      return playStatus = {\n          message: `Ganas a la computadora con ${miHerramienta} que utilizó ${suHerramienta}`,\n          userAdd: 1,\n          compAdd: 0,\n        };\n      // Gana la computadora\n      case 'rp':\n      case 'ps':\n      case 'sr':\n      return playStatus = {\n          message: `Gana la computadora con ${suHerramienta} contra tu ${miHerramienta}`,\n          userAdd: 0,\n          compAdd: 1,\n        };\n      // Empatamos\n      case 'rr':\n      case 'pp':\n      case 'ss':\n      return playStatus = {\n          message: `Habéis elegido la misma herramienta ${miHerramienta} y habéis empatado`,\n          userAdd: 1,\n          compAdd: 1,\n        };\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}