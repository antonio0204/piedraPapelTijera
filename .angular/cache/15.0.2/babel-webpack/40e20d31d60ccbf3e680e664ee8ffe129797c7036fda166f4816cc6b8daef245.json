{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class GameService {\n  constructor() {}\n  /**\r\n   * Math Random para generar un random y multiplicamos por 3\r\n   * Redondeamos el entero superior, quedando 0,1,2 como posibles resultados\r\n   * y con ello selecciona Piedra (r), Papel (p) ó Tijera (s)\r\n   */\n  play(choice) {\n    const random = Math.ceil(Math.random() * 3);\n    let result = '';\n    switch (random) {\n      case 1:\n        result = 'r';\n        break;\n      case 2:\n        result = 'p';\n        break;\n      case 3:\n        result = 's';\n        break;\n    }\n    if (choice === result) {\n      return 'Empate!';\n    } else if (choice === 'r' && result === 's') {\n      return 'Ganaste!';\n    } else if (choice === 's' && result === 'p') {\n      return 'Ganaste!';\n    } else if (choice === 'p' && result === 'r') {\n      return 'Ganaste!';\n    } else {\n      return 'Perdiste!';\n    }\n  }\n}\nGameService.ɵfac = function GameService_Factory(t) {\n  return new (t || GameService)();\n};\nGameService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GameService,\n  factory: GameService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EACtBC,eAAe;EAEf;;;;;EAOCC,IAAI,CAACC,MAAc;IAClB,MAAMC,MAAM,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACD,MAAM,EAAE,GAAG,CAAC,CAAC;IAC3C,IAAIG,MAAM,GAAG,EAAE;IACf,QAAQH,MAAM;MACZ,KAAK,CAAC;QACJG,MAAM,GAAG,GAAG;QACZ;MACF,KAAK,CAAC;QACJA,MAAM,GAAG,GAAG;QACZ;MACF,KAAK,CAAC;QACJA,MAAM,GAAG,GAAG;QACZ;IAAM;IAEV,IAAIJ,MAAM,KAAKI,MAAM,EAAE;MACrB,OAAO,SAAS;KACjB,MAAM,IAAIJ,MAAM,KAAK,GAAG,IAAII,MAAM,KAAK,GAAG,EAAE;MAC3C,OAAO,UAAU;KAClB,MAAM,IAAIJ,MAAM,KAAK,GAAG,IAAII,MAAM,KAAK,GAAG,EAAE;MAC3C,OAAO,UAAU;KAClB,MAAM,IAAIJ,MAAM,KAAK,GAAG,IAAII,MAAM,KAAK,GAAG,EAAE;MAC3C,OAAO,UAAU;KAClB,MAAM;MACL,OAAO,WAAW;;EAErB;;;mBAnCUP,WAAW;AAAA;;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;EAAAS,YAHV;AAAM","names":["GameService","constructor","play","choice","random","Math","ceil","result","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\BBVA\\angular-pwa\\src\\app\\services\\game.service.ts.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class GameService {\n  constructor() {}\n\n  /**\n   * Math Random para generar un random y multiplicamos por 3\n   * Redondeamos el entero superior, quedando 0,1,2 como posibles resultados\n   * y con ello selecciona Piedra (r), Papel (p) ó Tijera (s)\n   */\n  \n\n   play(choice: string): string {\n    const random = Math.ceil(Math.random() * 3);\n    let result = '';\n    switch (random) {\n      case 1:\n        result = 'r';\n        break;\n      case 2:\n        result = 'p';\n        break;\n      case 3:\n        result = 's';\n        break;\n    }\n    if (choice === result) {\n      return 'Empate!';\n    } else if (choice === 'r' && result === 's') {\n      return 'Ganaste!';\n    } else if (choice === 's' && result === 'p') {\n      return 'Ganaste!';\n    } else if (choice === 'p' && result === 'r') {\n      return 'Ganaste!';\n    } else {\n      return 'Perdiste!';\n    }\n   }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}